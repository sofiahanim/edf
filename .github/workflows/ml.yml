name: ML Part 1

on:
  push:
    branches:
      - main 
  schedule:
    - cron: "0 18 * * *" # Runs daily at 18:00 UTC
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write # Grants write permission to commit and push changes

jobs:
  preprocess:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11.10" # Adjust to match your script's Python version

    - name: Install System-Level Dependencies
      run: |
          echo "üîÑ Installing system-level dependencies..."
          sudo apt-get update -y
          sudo apt-get install -y \
            build-essential \
            swig \
            python3-dev \
            python3-pip \
            libopenblas-dev \
            liblapack-dev \
            gfortran \
            libatlas-base-dev \
            libhdf5-dev \
            libeigen3-dev \
            libssl-dev \
            zlib1g-dev \
            libcurl4-openssl-dev \
            libffi-dev \
            libxml2-dev \
            libxslt-dev \
            libpq-dev \
            libevent-dev
  
      # Step 4: Install Java (Required for H2O)
    - name: Install Java
      run: |
          echo "üîÑ Installing Java for H2O..."
          sudo apt-get install -y openjdk-11-jdk
  
      # Step 5: Upgrade Python Tools and Install Dependencies
    - name: Upgrade Python Tools and Install Dependencies
      run: |
          echo "üîÑ Upgrading pip, setuptools, and wheel..."
          python3 -m pip install --upgrade pip setuptools wheel
  
          echo "üîÑ Setting up compiler environment variables..."
          export CC=gcc
          export CXX=g++
  
          echo "üîÑ Installing Python dependencies..."
          python3 -m pip install --only-binary=:all: --no-cache-dir \
            -r requirements_linux.txt --verbose

    - name: Run Preprocessing Script
      run: |
        python3 scripts/ml_part_1.py
      env:
        PYTHONUNBUFFERED: 1 # Ensures real-time output in logs

    - name: Commit and Push Changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add data/merge/allyears.csv
        git diff --cached --exit-code || git commit -m "Update with daily preprocessing results"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify Success
      if: success()
      run: echo "üéâ ML 1 preprocessing completed successfully!"

    - name: Notify Failure
      if: failure()
      run: echo "‚ùå ML 1 preprocessing failed. Check logs for details."
