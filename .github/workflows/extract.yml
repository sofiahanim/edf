name: Data Extraction

on:
  workflow_dispatch: 
  schedule:
    - cron: '0 1 * * *'  # Runs at 1 AM UTC every day
  push:
    branches:
      - main

jobs:
  data_extraction:
    #runs-on: ubuntu-20.04  #
    runs-on: [self-hosted, linux, x64] 
    permissions:
      contents: write  # Allows this workflow to push commits
      issues: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Set up Git configuration
        run: |
          git config --global user.email "155748091+sofiahanim@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Handle ~BROMIUM if it exists
        run: |
          if [ -e "/home/runner/~BROMIUM" ]; then  # Use full path
            echo "Skipping further steps because ~BROMIUM exists."
            exit 0  # Exit early, skipping remaining steps
          else
            echo "~BROMIUM does not exist, continuing normally"
          fi

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.10  

      - name: Install specific dependencies via pip
        run: |
          sudo apt-get install -y libdbus-1-dev libpq-dev libjemalloc-dev python3-gi gir1.2-gtk-3.0 \
            python3-secretstorage python3-keyring python3-apt python3-pip ubuntu-advantage-tools ufw \
            unattended-upgrades libpython3-dev build-essential
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements_linux.txt

      - name: Run extraction script
        env:
          REDSHIFT_REGION: ${{ secrets.REDSHIFT_REGION }}
          REDSHIFT_WORKGROUP: ${{ secrets.REDSHIFT_WORKGROUP }}
        run: python scripts/extract_data.py

      - name: Update and commit requirements
        run: |
          cd ${{ github.workspace }}
          pip freeze > requirements_linux_updated.txt
          git add requirements_linux_updated.txt
          git commit -m "Update requirements" || echo "No changes to commit"
          git push

      - name: Archive logs
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs/

      - name: Commit and push if changes
        run: |
          git add dataset/electricity/2025.csv dataset/weather/2025.csv logs/
          git commit -m "Update datasets and logs" || echo "No changes to commit"
          git push
      - name: Execute Deployment Script
        run: |
          echo "Deploying application."
          ./deploy.sh
