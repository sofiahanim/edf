name: ML Part 3

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 20 * * *"   # 4:00 AM MALAYSIA TIME  
  workflow_dispatch:

permissions:
  contents: write

jobs:
  ml-evaluation:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements_linux.lock.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install System-Level Dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          build-essential \
          g++ \
          gcc \
          swig \
          cmake \
          python3-dev \
          python3-pip \
          libopenblas-dev \
          liblapack-dev \
          libatlas-base-dev \
          libffi-dev \
          libssl-dev \
          zlib1g-dev \
          libcurl4-openssl-dev \
          libhdf5-dev \
          libgfortran5 \
          libgomp1

    - name: Upgrade Python Tools
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
    - name: Install Core ML Libraries
      run: |
        echo "üîç Installing core ML libraries..."
        pip install --no-cache-dir -r requirements_linux.txt --verbose
      
    - name: Check for Dependency Conflicts
      run: |
        python3 -m pip check || exit 1

    - name: Install Stan via CmdStanPy
      run: |
        n=0
        until [ "$n" -ge 5 ]
        do
          python3 -m cmdstanpy.install_cmdstan --version latest && break
          n=$((n+1))
          echo "Retrying in $((2**n)) seconds..."
          sleep $((2**n))
        done
        if [ "$n" -ge 5 ]; then
          echo "‚ùå CmdStanPy installation failed after 5 attempts."
          exit 1
        fi

    - name: Test Dependency Installation
      run: |
        python3 -c "import pandas, pycaret, numpy, sklearn, tensorflow, darts, pyod, prophet, statsforecast"
        
        
    - name: Debug Installed Packages
      run: |
        echo "üîç Listing installed pip packages..."
        python3 -m pip list
    

    - name: Check Dependency Tree
      run: |
        python3 -m pip install pipdeptree
        pipdeptree

    - name: Initialize Required Files and Directories
      run: |
        for dir in training validation evaluation; do
          mkdir -p "$dir"
          [ ! -f "$dir/placeholder.csv" ] && echo "ds,y" > "$dir/placeholder.csv"
        done

    - name: Ensure Reports Directory Exists
      run: |
        mkdir -p reports

    - name: Validate Input Dataset
      run: |
        if [ ! -f "data/merge/allyears.csv" ]; then
        echo "‚ùå Required dataset allyears.csv is missing. Exiting."
        exit 1
        fi
        echo "‚úÖ Dataset allyears.csv is present."

    - name: Verify Training Files
      run: |
        if ! ls training/*.csv 1> /dev/null 2>&1; then
          echo "‚ùå Training files are missing." && exit 1
        fi

    - name: Verify Validation Files
      run: |
        if ! ls validation/*.csv 1> /dev/null 2>&1; then
          echo "‚ùå Validation files are missing." && exit 1
        fi

    - name: Verify Evaluation Files
      run: |
        if ! ls evaluation/*.csv 1> /dev/null 2>&1; then
          echo "‚ùå Evaluation files are missing." && exit 1
        fi

    - name: Debug File Existence
      run: |
        echo "Training files:"
        ls -l training/
        echo "Validation files:"
        ls -l validation/
        echo "Evaluation files:"
        ls -l evaluation/
        echo "Reports directory:"
        ls -l reports/

    - name: Run Model Training Script
      run: |
        python3 scripts/ml_part_3.py --verbose
      env:
        PYTHONUNBUFFERED: 1
        LOG_LEVEL: DEBUG

    - name: Debug Training Script Logs
      if: failure()
      run: |
        echo "‚ö†Ô∏è Command failed. Debugging..."
        tail -n 50 /var/log/syslog || echo "No syslog available."

    - name: Verify Script Outputs
      run: |
        for file in reports/automl_leaderboard.csv reports/pycaret_predictions.csv; do
            if [ ! -f "$file" ]; then
                echo "‚ùå Missing output: $file"
                exit 1
            else
                echo "‚úÖ Output exists: $file"
            fi
        done

    - name: Commit and Push Changes
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        git add training/*.csv validation/*.csv evaluation/*.csv reports/*.csv
        git commit -m "Update ML 3 results: $(date -u '+%Y-%m-%d %H:%M:%S') UTC"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify Completion
      if: success()
      run: echo "üéâ Workflow completed successfully!"
    - name: Notify Failure
      if: failure()
      run: echo "‚ùå Workflow failed. Check logs for details."
