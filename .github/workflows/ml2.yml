name: ML Part 2

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 19 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  ml-training:
    runs-on: ubuntu-20.04

    steps:
    # Step 1: Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set Up Python
    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11.10"

    # Step 3: Install System-Level Dependencies
    - name: Install System-Level Dependencies
      run: |
        echo "🔄 Installing system-level dependencies..."
        sudo apt-get update -y
        sudo apt-get install -y \
          build-essential \
          swig \
          cmake \
          python3-dev \
          python3-pip \
          libopenblas-dev \
          liblapack-dev \
          libatlas-base-dev \
          libffi-dev \
          libssl-dev \
          zlib1g-dev \
          libcurl4-openssl-dev \
          libhdf5-dev

    # Step 4: Upgrade Python Tools
    - name: Upgrade Python Tools
      run: |
        echo "🔄 Upgrading pip, setuptools, and wheel..."
        python3 -m pip install --upgrade pip setuptools wheel

    # Step 5: Install Python Dependencies
    - name: Install Python Dependencies
      run: |
        echo "🔄 Installing Python dependencies..."
        python3 -m pip install --only-binary=:all: --no-cache-dir \
          -r requirements_linux.txt --verbose

    # Step 6: Install auto-sklearn
    - name: Install auto-sklearn
      run: |
        echo "🔄 Installing auto-sklearn..."
        python3 -m pip install auto-sklearn --verbose --no-cache-dir
      continue-on-error: true

    - name: Check Dependency Tree
      run: |
        python3 -m pip install pipdeptree
        pipdeptree

    # Step 7: Run Model Training Script
    - name: Run Model Training Script
      run: |
        echo "🏃 Running the ML training script with verbose output..."
        python3 scripts/ml_part_2.py --verbose
      env:
        PYTHONUNBUFFERED: 1

    # Step 8: Verify Metrics Files
    - name: Verify Metrics Files
      run: |
        echo "🔍 Verifying metrics files..."
        for file in training/h2o_metrics.csv training/darts theta_metrics.csv training/prophet_metrics.csv training/training_info.csv; do
          if [ -f "$file" ]; then
            echo "✅ $file exists and is ready."
          else
            echo "❌ $file is missing."
            exit 1
          fi
        done

    # Step 9: Notify Success or Failure
    - name: Notify Completion
      if: always()
      run: |
        if [ "$?" -eq 0 ]; then
          echo "🎉 Workflow completed successfully!"
        else
          echo "❌ Workflow failed. Check logs for details."
