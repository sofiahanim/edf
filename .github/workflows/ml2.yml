name: ML Part 2

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to main branch
  schedule:
    - cron: "0 19 * * *"  # Schedule daily at 19:00 UTC (3:00 AM Malaysia Time)
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Grants permission to commit and push changes

jobs:
  ml-training:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11.10"

    - name: Install System-Level Dependencies
      run: |
        echo "üîÑ Installing system-level dependencies..."
        sudo apt-get update -y
        sudo apt-get install -y \
            build-essential \
            swig \
            python3-dev \
            python3-pip \
            libopenblas-dev \
            liblapack-dev \
            gfortran \
            libatlas-base-dev \
            libhdf5-dev \
            libeigen3-dev \
            libssl-dev \
            zlib1g-dev \
            libcurl4-openssl-dev \
            libffi-dev \
            libxml2-dev \
            libxslt-dev \
            libpq-dev

    - name: Install Java
      run: |
        echo "üîÑ Installing Java for H2O..."
        sudo apt-get install -y openjdk-11-jdk

    - name: Upgrade Python Tools and Install Dependencies
      run: |
        echo "üîÑ Upgrading pip, setuptools, and wheel..."
        python3 -m pip install --upgrade pip setuptools wheel

        echo "üîÑ Installing Python dependencies..."
        python3 -m pip install -r requirements_linux.txt --verbose

    - name: Run Model Training Script
      run: |
        echo "üèÉ Running the ML training script with verbose output..."
        python3 scripts/ml_part_2.py --verbose
      env:
        PYTHONUNBUFFERED: 1

    - name: Verify Metrics Files
      run: |
        echo "üîç Verifying metrics files..."
        for file in training/h2o_metrics.csv training/darts theta_metrics.csv training/prophet_metrics.csv training/training_info.csv; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file exists and is ready."
          else
            echo "‚ùå $file is missing."
            exit 1
          fi
        done

    - name: Verify Evaluation Files
      run: |
        echo "üîç Verifying evaluation files..."
        for file in evaluation/h2o_predictions.csv evaluation/darts_theta_predictions.csv evaluation/prophet_predictions.csv evaluation/summary_report.csv; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file exists and is ready."
          else
            echo "‚ùå $file is missing."
            exit 1
          fi
        done

    - name: Verify Validation Files
      run: |
        echo "üîç Verifying validation files..."
        for file in validation/consolidated_validation_metrics.csv validation/h2o_validation_metrics.csv validation/prophet_validation_metrics.csv validation/theta_validation_metrics.csv; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file exists and is ready."
          else
            echo "‚ùå $file is missing."
            exit 1
          fi
        done

    - name: Commit and Push Metrics Files
      run: |
        echo "üìÇ Committing and pushing metrics, validation, and evaluation files..."
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add training/h2o_metrics.csv training/darts_theta_metrics.csv training/prophet_metrics.csv training/training_info.csv || echo "No changes to commit."
        git add evaluation/h2o_predictions.csv evaluation/darts_theta_predictions.csv evaluation/prophet_predictions.csv evaluation/summary_report.csv || echo "No changes to commit."
        git add validation/consolidated_validation_metrics.csv validation/h2o_validation_metrics.csv validation/prophet_validation_metrics.csv validation/theta_validation_metrics.csv || echo "No changes to commit."
        git diff --cached --exit-code || git commit -m "Update metrics, validation, and evaluation files after training"
        git push || echo "No changes to push."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify Success
      if: success()
      run: echo "üéâ Model training and evaluation update completed successfully!"

    - name: Notify Failure
      if: failure()
      run: echo "‚ùå Model training or evaluation update failed. Check logs for details."
